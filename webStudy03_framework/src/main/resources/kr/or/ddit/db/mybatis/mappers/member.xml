<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.member.dao.IMemberDAO">

	<sql id="searchFrag">
		<where>
			<if test="searchVO neq null and @org.apache.commons.lang3.StringUtils@isNotBlank(searchVO.searchType)">
				<choose>
					<when test="'name' eq searchVO.searchType">
						
							MEM_NAME LIKE '%' || #{searchVO.searchWord} ||'%'
					</when>
					<when test="'address' eq searchVO.searchType">
							MEM_ADD1 LIKE '%' || #{searchVO.searchWord} ||'%'
					</when>
					<when test="'all' eq searchVO.searchType and @org.apache.commons.lang3.StringUtils@isNotBlank(searchVO.searchWord)">
						INSTR(MEM_NAME, #{searchVO.searchWord}) > 0
						OR
						INSTR(MEM_ADD1, #{searchVO.searchWord}) > 0
					</when>
				</choose>
			</if>
		</where>
	</sql>
	
	<select id="selectMemberCount" parameterType="PagingVO" resultType="int">
	
		SELECT COUNT(*) FROM MEMBER
		<include refid="searchFrag"/>
	</select>
	
	<select id="selectMemberList" parameterType="PagingVO" resultType="MemberVO">
	
		SELECT A.*
		FROM (SELECT ROWNUM RNUM,                                                                                 
		MEM_ID,    MEM_PASS,    MEM_NAME,
		MEM_REGNO1,    MEM_REGNO2,    TO_CHAR(MEM_BIR,'YYYY-MM-DD') MEM_BIR,                    
		MEM_ZIP,    MEM_ADD1,    MEM_ADD2,                                                      
		MEM_HOMETEL,    MEM_COMTEL,    MEM_HP,                                                  
		MEM_MAIL,    MEM_JOB,    MEM_LIKE,                                                      
		MEM_MEMORIAL,    TO_CHAR(MEM_MEMORIALDAY, 'YYYY-MM-DD') MEM_MEMORIALDAY,    MEM_MILEAGE,
		MEM_DELETE,		MEM_ROLE  ,    MEM_IMG                                                                             
		FROM    MEMBER
		<include refid="searchFrag"/>
		) A
		<![CDATA[
			WHERE RNUM >=${startRow} AND RNUM <=#{endRow}
		]]>
	
	</select>
	
	<resultMap type="MemberVO" id="memberMap" autoMapping="true">
		<id property="mem_id" column="MEM_ID"/>
		<collection property="prodList" ofType="ProdVO" autoMapping="true">
		</collection>
	</resultMap>
	
	<select id="selectMember" parameterType="string" resultMap="memberMap">
		
		 WITH MEMCART AS(
	      SELECT                                                                                        
	          MEM_ID,    MEM_PASS,    MEM_NAME,                                                             
	          MEM_REGNO1,    MEM_REGNO2,    TO_CHAR(MEM_BIR,'YYYY-MM-DD') MEM_BIR,                          
	          MEM_ZIP,    MEM_ADD1,    MEM_ADD2,                                                            
	          MEM_HOMETEL,    MEM_COMTEL,    MEM_HP,                                                        
	          MEM_MAIL,    MEM_JOB,    MEM_LIKE,                                                            
	          MEM_MEMORIAL,    TO_CHAR(MEM_MEMORIALDAY, 'YYYY-MM-DD') MEM_MEMORIALDAY,    MEM_MILEAGE,      
	          MEM_DELETE,		MEM_ROLE , MEM_IMG
	             , CART_MEMBER, CART_PROD                                                                                    
	       FROM    MEMBER LEFT OUTER JOIN (SELECT DISTINCT CART_MEMBER, CART_PROD FROM CART) ON (MEM_ID = CART_MEMBER)                                                                               
	       WHERE MEM_ID = #{mem_id}
	       )
	       SELECT memcart.*, prod.*
	       FROM MEMCART LEFT OUTER JOIN PROD ON (CART_PROD = PROD_ID)
		
	</select>
	<insert id="insertMember" parameterType="MemberVO">
		 INSERT INTO MEMBER (								
		     MEM_ID,    MEM_PASS,    MEM_NAME,    MEM_REGNO1,   
		     MEM_REGNO2,    MEM_BIR,    MEM_ZIP,    MEM_ADD1,   
		     MEM_ADD2,    MEM_HOMETEL,    MEM_COMTEL,    MEM_HP,
		     MEM_MAIL,    MEM_JOB,    MEM_LIKE,    MEM_MEMORIAL,
		     MEM_MEMORIALDAY,    MEM_MILEAGE,    MEM_DELETE
		     ,		MEM_ROLE,    MEM_IMG 
		 ) VALUES (                                             
		 	 #{mem_id},    #{mem_pass},    #{mem_name},    #{mem_regno1},   
		     #{mem_regno2},    TO_DATE(#{mem_bir,jdbcType=DATE},'YYYY-MM-DD'),    #{mem_zip},    #{mem_add1},   
		     #{mem_add2},    #{mem_hometel},    #{mem_comtel},    #{mem_hp,jdbcType=VARCHAR},
		     #{mem_mail},    #{mem_job,jdbcType=VARCHAR},    #{mem_like,jdbcType=VARCHAR},    #{mem_memorial,jdbcType=VARCHAR},
		     TO_DATE(#{mem_memorialday,jdbcType=DATE}, 'YYYY-MM-DD'),    #{mem_mileage,jdbcType=NUMERIC},    #{mem_delete,jdbcType=VARCHAR}
		     , 'ROLE_USER'    ,#{mem_img,jdbcType=BLOB}           
		 )  
	</insert>
	
	
	<update id="updateMember" parameterType="MemberVO">
	
		UPDATE member   
		SET             
		mem_name         = #{mem_name},
		mem_zip          = #{mem_zip},
		mem_add1         = #{mem_add1},
		mem_add2         = #{mem_add2},
		mem_hometel      = #{mem_hometel},
		mem_comtel       = #{mem_comtel},
		mem_hp           = #{mem_hp,jdbcType=VARCHAR},
		mem_mail         = #{mem_mail},
		mem_job          = #{mem_job,jdbcType=VARCHAR},
		mem_like         = #{mem_like,jdbcType=VARCHAR},
		mem_memorial     = #{mem_memorial,jdbcType=VARCHAR},
		mem_memorialday  = #{mem_memorialday,jdbcType=DATE}
		<if test="mem_img neq null">
			, MEM_IMG			 = #{mem_img,jdbcType=BLOB}
		</if>
		WHERE mem_id     = #{mem_id}
	</update>
	
	<delete id="deleteMember" parameterType="string">
		UPDATE MEMBER
		SET MEM_DELETE = 'Y'
		WHERE MEM_ID = #{mem_id}
	</delete>
</mapper>
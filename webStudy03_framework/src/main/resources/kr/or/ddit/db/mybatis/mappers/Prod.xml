<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.prod.dao.IProdDAO">

	
	<resultMap type="ProdVO" id="prodMap" autoMapping="true">
		<id property="prod_id" column="PROD_ID"/>
		<association property="buyer" javaType="BuyerVO" autoMapping="true" />
		<association property="lprodVO" javaType="LProdVO" autoMapping="true"/>
		<collection property="memList" ofType="MemberVO" autoMapping="true"/>
	</resultMap>
	
	
	<select id="selectProd" parameterType="string" resultMap="prodMap">
	
		WITH CARTVIEW AS (
		    SELECT DISTINCT CART_MEMBER, CART_PROD
		            , MEM_ID, MEM_NAME, MEM_HP, MEM_ADD1, MEM_MAIL
		    FROM CART INNER JOIN MEMBER ON(CART_MEMBER = MEM_ID)
		),
		LPRODVIEW AS(
			SELECT
				PROD_ID,    PROD_NAME,    PROD_LGU,    PROD_BUYER,
			    PROD_COST,    PROD_PRICE,    PROD_SALE,    PROD_OUTLINE,
			    PROD_DETAIL,    PROD_IMG,    PROD_TOTALSTOCK,    TO_CHAR(PROD_INSDATE, 'YYYY-MM-DD'),
			    PROD_PROPERSTOCK,    PROD_SIZE,    PROD_COLOR,    PROD_DELIVERY,
			    PROD_UNIT,    PROD_QTYIN,    PROD_QTYSALE,    PROD_MILEAGE
			    , LPROD_ID,	LPROD_GU, LPROD_NM
			    ,BUYER_ID, BUYER_NAME, BUYER_CHARGER, BUYER_ADD1
		    FROM PROD INNER JOIN LPROD ON (PROD_LGU = LPROD_GU)
		    		INNER JOIN BUYER ON (PROD_BUYER = BUYER_ID)
		)
		SELECT 
				LPRODVIEW.*,
			    MEM_ID, MEM_NAME, MEM_HP, MEM_ADD1, MEM_MAIL,
			    LPROD_ID,	LPROD_GU, LPROD_NM
		FROM    LPRODVIEW LEFT OUTER JOIN CARTVIEW ON (PROD_ID = CART_PROD)
		WHERE PROD_ID = #{prod_id}
	
	</select>

	<insert id="insertProd" parameterType="ProdVO" >
		<selectKey resultType="string" order="BEFORE" keyProperty="prod_id">
			SELECT #{prod_lgu} || LPAD(NVL(TO_NUMBER(SUBSTR(MAX(PROD_ID),5)),0)+1, 6, '0')
			FROM PROD
			WHERE PROD_LGU = #{prod_lgu}
		</selectKey>
		INSERT INTO prod (
		    PROD_ID,    PROD_NAME,    PROD_LGU,    PROD_BUYER,
		    PROD_COST,    PROD_PRICE,    PROD_SALE,    PROD_OUTLINE,
		    PROD_DETAIL,    PROD_IMG,    PROD_TOTALSTOCK,    PROD_INSDATE,
		    PROD_PROPERSTOCK,    PROD_SIZE,    PROD_COLOR,    PROD_DELIVERY,
		    PROD_UNIT,    PROD_QTYIN,    PROD_QTYSALE,    PROD_MILEAGE
		) VALUES (
			#{prod_id,jdbcType=VARCHAR},    #{prod_name,jdbcType=VARCHAR},    
			#{prod_lgu,jdbcType=VARCHAR},    #{prod_buyer,jdbcType=VARCHAR},
		    #{prod_cost,jdbcType=NUMERIC},    #{prod_price,jdbcType=NUMERIC},    
		    #{prod_sale,jdbcType=NUMERIC},    #{prod_outline,jdbcType=VARCHAR},
		    #{prod_detail,jdbcType=VARCHAR},    #{prod_img,jdbcType=VARCHAR},    
		    #{prod_totalstock,jdbcType=NUMERIC},    SYSDATE,
		    #{prod_properstock,jdbcType=NUMERIC},    #{prod_size,jdbcType=VARCHAR},    
		    #{prod_color,jdbcType=VARCHAR},    #{prod_delivery,jdbcType=VARCHAR},
		    #{prod_unit,jdbcType=VARCHAR},    #{prod_qtyin,jdbcType=NUMERIC},    
		    #{prod_qtysale,jdbcType=NUMERIC},    #{prod_mileage,jdbcType=NUMERIC}
		)
	
	</insert>
	
	<sql id="searchFrag">
		<trim prefix=" WHERE " prefixOverrides="AND">
			<if test="searchData neq null">
				<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(searchData.prod_lgu)">
					AND prod_lgu = #{searchData.prod_lgu, jdbcType=VARCHAR} 
				</if>
				<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(searchData.prod_name)">
					AND prod_name = #{searchData.prod_name, jdbcType=VARCHAR} 
				</if>
				<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(searchData.prod_buyer)">
					AND prod_buyer = #{searchData.prod_buyer, jdbcType=VARCHAR} 
				</if>
			</if>
		</trim>
	</sql>
	
	<select id="selectProdList" parameterType="PagingVO" resultMap="prodMap">
	
		 SELECT A.*
			FROM (               
			 SELECT ROWNUM RNUM, 
			    PROD_ID,    PROD_NAME,    PROD_LGU,    PROD_BUYER,
			    PROD_COST,    PROD_PRICE,    PROD_SALE,    PROD_OUTLINE,
			    PROD_DETAIL,    PROD_IMG,    PROD_TOTALSTOCK,    TO_CHAR(PROD_INSDATE, 'YYYY-MM-DD'),
			    PROD_PROPERSTOCK,    PROD_SIZE,    PROD_COLOR,    PROD_DELIVERY,
			    PROD_UNIT,    PROD_QTYIN,    PROD_QTYSALE,    PROD_MILEAGE
			    , LPROD_ID,	LPROD_GU, LPROD_NM
			    ,BUYER_ID, BUYER_NAME, BUYER_CHARGER, BUYER_ADD1
			FROM PROD INNER JOIN LPROD ON (PROD_LGU = LPROD_GU)
			INNER JOIN BUYER ON (PROD_BUYER = BUYER_ID)
			<include refid="searchFrag"/>
			) A
			<![CDATA[
				WHERE RNUM >=${startRow} AND RNUM <=#{endRow}
			]]>
	</select>
	
	<select id="selectProdCount" parameterType="PagingVO" resultType="int">
	
		SELECT
            COUNT(*)
        FROM PROD INNER JOIN LPROD ON (PROD_LGU = LPROD_GU)
                INNER JOIN BUYER ON (PROD_BUYER = BUYER_ID)
		<include refid="searchFrag"/>
	</select>
	
	<update id="updateProd" parameterType="ProdVO">
	
	UPDATE prod
    SET
	     prod_name          =  #{prod_name,jdbcType=VARCHAR}, 
	     prod_cost          =  #{prod_cost,jdbcType=NUMERIC}, 
	     prod_price         =  #{prod_price,jdbcType=NUMERIC}, 
	     prod_sale          =  #{prod_sale,jdbcType=NUMERIC}, 
	     prod_outline       =  #{prod_outline,jdbcType=VARCHAR}, 
	     prod_detail        =  #{prod_detail,jdbcType=VARCHAR}, 
	     prod_img           =  #{prod_img,jdbcType=VARCHAR}, 
	     prod_totalstock    =  #{prod_totalstock,jdbcType=NUMERIC}, 
	     prod_properstock   =  #{prod_properstock,jdbcType=NUMERIC}, 
	     prod_size          =  #{prod_size,jdbcType=VARCHAR}, 
	     prod_color         =  #{prod_color,jdbcType=VARCHAR}, 
	     prod_delivery      =  #{prod_delivery,jdbcType=VARCHAR}, 
	     prod_unit          =  #{prod_unit,jdbcType=VARCHAR}, 
	     prod_qtyin         =  #{prod_qtyin,jdbcType=NUMERIC}, 
	     prod_qtysale       =  #{prod_qtysale,jdbcType=NUMERIC}, 
	     prod_mileage       =  #{prod_mileage,jdbcType=NUMERIC} 
	WHERE
	     prod_id            =  #{prod_id} 
	
	</update>
	
</mapper>
















